"""empty message

Revision ID: df060cd063b9
Revises: fffb79bf9c0b
Create Date: 2025-10-04 21:44:16.945977

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = 'df060cd063b9'
down_revision = 'fffb79bf9c0b'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('cvs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('cv_title', sa.String(length=255), nullable=True),
    sa.Column('original_filename', sa.String(length=255), nullable=True),
    sa.Column('storage_path', sa.String(length=255), nullable=False),
    sa.Column('uploaded_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('jobs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('hr_user_id', sa.Integer(), nullable=False),
    sa.Column('job_title', sa.String(length=255), nullable=True),
    sa.Column('job_location', sa.String(length=255), nullable=True),
    sa.Column('job_description', sa.Text(), nullable=True),
    sa.Column('min_experience', sa.Integer(), nullable=True),
    sa.Column('max_experience', sa.Integer(), nullable=True),
    sa.Column('degree_requirements', sa.String(length=100), nullable=True),
    sa.Column('requirements_json', sa.JSON(), nullable=True),
    sa.Column('skills_json', sa.JSON(), nullable=True),
    sa.Column('additional_info_json', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['hr_user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('analyses',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('cv_id', sa.Integer(), nullable=False),
    sa.Column('job_description_text', sa.Text(), nullable=False),
    sa.Column('match_score', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('ats_check_result_json', sa.JSON(), nullable=True),
    sa.Column('keyword_analysis_json', sa.JSON(), nullable=True),
    sa.Column('phrasing_suggestions_json', sa.JSON(), nullable=True),
    sa.Column('analyzed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['cv_id'], ['cvs.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('candidates',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('job_id', sa.Integer(), nullable=False),
    sa.Column('original_filename', sa.String(length=255), nullable=True),
    sa.Column('storage_path', sa.String(length=255), nullable=True),
    sa.Column('extracted_name', sa.String(length=255), nullable=True),
    sa.Column('extracted_email', sa.String(length=255), nullable=True),
    sa.Column('extracted_phone', sa.String(length=50), nullable=True),
    sa.Column('match_score', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('structured_profile_json', sa.JSON(), nullable=True),
    sa.Column('uploaded_at', sa.DateTime(), nullable=True),
    sa.Column('status', sa.Enum('processing', 'passed_filter', 'rejected', name='candidate_status'), nullable=True),
    sa.Column('rejection_reason', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('generatedcvs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('original_cv_id', sa.Integer(), nullable=False),
    sa.Column('template_name', sa.String(length=100), nullable=True),
    sa.Column('version_number', sa.Integer(), nullable=True),
    sa.Column('storage_path', sa.String(length=255), nullable=False),
    sa.Column('generated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['original_cv_id'], ['cvs.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('full_name', sa.String(length=255), nullable=True))
        batch_op.add_column(sa.Column('password_hash', sa.String(length=255), nullable=False))
        batch_op.add_column(sa.Column('role', sa.Enum('user', 'hr', 'admin', name='user_roles'), nullable=False))
        batch_op.add_column(sa.Column('created_at', sa.DateTime(), nullable=True))
        batch_op.alter_column('email',
               existing_type=mysql.VARCHAR(length=120),
               type_=sa.String(length=255),
               existing_nullable=False)
        batch_op.drop_column('password')
        batch_op.drop_column('username')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('username', mysql.VARCHAR(length=50), nullable=False))
        batch_op.add_column(sa.Column('password', mysql.VARCHAR(length=200), nullable=False))
        batch_op.alter_column('email',
               existing_type=sa.String(length=255),
               type_=mysql.VARCHAR(length=120),
               existing_nullable=False)
        batch_op.drop_column('created_at')
        batch_op.drop_column('role')
        batch_op.drop_column('password_hash')
        batch_op.drop_column('full_name')

    op.drop_table('generatedcvs')
    op.drop_table('candidates')
    op.drop_table('analyses')
    op.drop_table('jobs')
    op.drop_table('cvs')
    # ### end Alembic commands ###
